package dev.kreutz.cloudbreaksmssender;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;
import java.util.concurrent.Semaphore;

public class SmsSenderLog extends JFrame {
    private JLabel label;
    private JPanel panel;
    private JTextPane textPane;
    private JScrollPane scrollPane;
    private JButton button;

    public SmsSenderLog(JFrame parent) {
        setContentPane(panel);
        setResizable(false);
        setUndecorated(true);
        setLocationRelativeTo(parent);

        pack();
        setVisible(true);
    }

    public void setLabelText(String text) {
        label.setText(text);
    }

    public void success(String number) {
        appendColored(number + ": SUCCESS\n", Color.GREEN);
    }

    public void error(String number) {
        appendColored(number + ": ERROR\n", Color.RED);
    }

    private void appendColored(String text, Color color) {
        StyledDocument document = textPane.getStyledDocument();

        StyleContext styleContext = StyleContext.getDefaultStyleContext();
        AttributeSet attributeSet = styleContext.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, color);

        try {
            document.insertString(document.getLength(), text, attributeSet);
        } catch (BadLocationException ignored) {
        }

        JScrollBar vertical = scrollPane.getVerticalScrollBar();
        vertical.setValue(vertical.getMaximum());
    }

    public void waitForFinish() {
        button.setEnabled(true);

        Semaphore semaphore = new Semaphore(1);

        try {
            semaphore.acquire();
        } catch (InterruptedException ignored) {
        }

        button.addActionListener(e -> {
            semaphore.release();
            dispose();
        });

        try {
            semaphore.acquire();
        } catch (InterruptedException ignored) {
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(3, 1, new Insets(10, 10, 10, 10), -1, -1));
        label = new JLabel();
        label.setText("");
        panel.add(label, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        scrollPane = new JScrollPane();
        panel.add(scrollPane, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(500, 500), null, 0, false));
        textPane = new JTextPane();
        textPane.setEditable(false);
        textPane.setEnabled(true);
        scrollPane.setViewportView(textPane);
        button = new JButton();
        button.setEnabled(false);
        button.setText("Finish");
        panel.add(button, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
